{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","TodosError/index.js","TodosLoading/index.js","EmptyTodos/index.js","CreateTodoButton/index.js","Modal/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","addTodo","push","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","class","type","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","htmlFor","TodosError","TodosLoading","override","css","size","color","speedMultiplier","EmptyTodos","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.3a502dcf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\nconst TodoContext = React.createContext();//nos permite crear contextos q son las herramientas q nos van a dar los providers y consumers para compartir el estado por todos los compnentes de nuestra app\r\n\r\n\r\n//En TodoContext tenemos dos componentes: provider y consumer\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        item: todos, \r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n      } = useLocalStorage('TODOS_V1', []);\r\n      \r\n      const [searchValue, setSearchValue] = React.useState('')\r\n    const [openModal, setOpenModal] = React.useState(false)\r\n\r\n      const completedTodos = todos.filter(todo => !!todo.completed).length //cada vez q cambien los todos o nuestro searchvalue, vamos a volver a hacer esta cuenta, cuantos todo se han marcado como completado. Podemos ir a nuestro array de todos y llamar al metodo filter, porqe esta variable de todos es un array, y aca podemos filtrar nuestro todos examinando haber si cada todo tiene su propiedad todo.completed como true  \r\n      const totalTodos = todos.length\r\n    \r\n      let searchedTodos = []; //array vacio\r\n    \r\n      if (!searchValue.length >= 1) //en caso de q esto no sea cierto, nuetros todos deben mostrarse completos\r\n      {\r\n        searchedTodos = todos;\r\n      } //vamos a ver si nuestro seacrhValue, la longitud de este string es mayor o igual a 1, esto es para ver si no han escrito nada en nuestro input o si ya escribieron algo. \r\n      else {\r\n        searchedTodos = todos.filter(todo => {\r\n          const todoText = todo.text.toLowerCase();\r\n          const searchText = searchValue.toLowerCase();\r\n          return todoText.includes(searchText);\r\n        })\r\n    \r\n      } //si los usuario ya escribieron algo en el input, vamos a filtrar la cantidad de todo's q guardamos en esta lista \r\n    \r\n      //Para marcar completado el todo:\r\n      const completeTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    \r\n        const newTodos = [...todos];\r\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\r\n        //newTodos[todoIndex].completed = true\r\n    \r\n        saveTodos(newTodos);\r\n      }\r\n    \r\n      //para borrar todos:\r\n      const deleteTodo = (text) => {\r\n        const todoIndex = todos.findIndex(todo => todo.text === text);\r\n    \r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        saveTodos(newTodos);\r\n      };\r\n\r\n      //AÃ±adir todo\r\n      const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n          completed: false,\r\n          text,\r\n        }) \r\n        saveTodos(newTodos);\r\n      };\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            addTodo,\r\n            deleteTodo,\r\n            setOpenModal,\r\n            openModal,\r\n        }}>\r\n            {props.children}\r\n\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContext, TodoProvider };\r\n","import React from 'react';\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [item, setItem] = React.useState(initialValue)\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName);\r\n                let parsedItem;\r\n\r\n                if (!localStorageItem) {\r\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n                    parsedItem = initialValue;\r\n                } else {\r\n                    parsedItem = JSON.parse(localStorageItem)\r\n                }\r\n\r\n                setItem(parsedItem);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error)\r\n            }\r\n        }, 1000)\r\n    });\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n            const stringifiedItem = JSON.stringify(newItem);\r\n            localStorage.setItem(itemName, stringifiedItem);\r\n            setItem(newItem);\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n    };\r\n\r\n    return {\r\n        item,\r\n        saveItem,\r\n        loading,\r\n        error,\r\n    };\r\n\r\n}\r\n\r\nexport { useLocalStorage }","import React from \"react\";\r\nimport { TodoContext } from \"../TodoContext\";\r\n\r\n\r\nfunction TodoCounter() {\r\n    const { totalTodos, completedTodos } = React.useContext(TodoContext)\r\n    return <h2 className = \"bg-purple-600 text-white text-center max-w-2xl text-3xl shadow-xl font-medium m-auto mt-5 mb-5 p-5 border-gray-400 rounded-lg\" > You've done {completedTodos} of {totalTodos} TODO's </h2>;\r\n}\r\n\r\nexport { TodoCounter };","import React from 'react'\r\nimport { TodoContext } from '../TodoContext'\r\n\r\nfunction TodoSearch() {\r\n    const {searchValue, setSearchValue} = React.useContext(TodoContext)\r\n    const onSearchValueChange = (event) => {\r\n        console.log(event.target.value)\r\n        setSearchValue(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <form>\r\n                <div class=\"space-x-5\">\r\n                    <input type=\"text\" placeholder=\"Search your Todo\" className=\"pl-2 pr-2 p-2 border-2 border-purple-500 rounded-lg w-64 focus:outline-none focus:border-purple-500\"\r\n                        value={searchValue}\r\n                        onChange={onSearchValueChange} />,\r\n            \r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport { TodoSearch };","import React  from 'react'\r\n\r\n function TodoList(props) {\r\n    return (\r\n        <section>\r\n            <ul>\r\n            {props.children}\r\n            </ul>\r\n        </section>\r\n      \r\n    )\r\n}\r\n\r\nexport {TodoList}","import React from 'react';\r\nimport { BsCheckCircle } from 'react-icons/bs';\r\nimport './TodoItem.css';\r\n\r\n\r\nfunction TodoItem(props) {\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"grid justify-items-center\">\r\n            <div className=\"bg-white text-center m-5 rounded-xl p-4 w-2/6 sm:w-auto\">\r\n                <div className=\"flex justify-between space-x-5 items-center\">\r\n                    <span className=\r\n                        {`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\r\n                        onClick={props.onComplete}//En este metodo onClick, voy a llamar a onComplete, no llamo a la ejecuciÃ³n de este mÃ©todo, entonces por eso le envio la funcion sin los (), si necesitara enviar los () y algun argumento, tendria q envolverla con  un =>\r\n                    >\r\n                        <BsCheckCircle/>\r\n                        \r\n                    \r\n                    </span>\r\n\r\n                    <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\r\n                        {props.text}\r\n                    </p>\r\n\r\n                    <button className=\"bg-red-500 text-white font-medium px-2 py-1 rounded-xl hover:bg-red-900 Icon-delete\"\r\n                        onClick={props.onDelete}> Delete</button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { TodoItem }\r\n","import React from 'react'\r\nimport { TodoContext } from '../TodoContext'\r\nimport './TodoForm.css'\r\n\r\nfunction TodoForm() {\r\nconst [newTodoValue, setNewTodoValue] = React.useState('')\r\n\r\nconst {\r\n    addTodo,\r\n    setOpenModal,\r\n} = React.useContext(TodoContext)\r\n\r\nconst onChange = (event) => {\r\n    setNewTodoValue(event.target.value)\r\n}\r\n\r\nconst onCancel = () => {\r\n    setOpenModal(false);\r\n}\r\n\r\nconst onSubmit = (event) => {\r\n    event.preventDefault(); //este metodo nos ayuda a q cuando el formulario se envie, donde esta el boton submit, no vamos a recargar la pagina o tratar de enviar los datos a una parte, sino q cancelamos eso\r\n    addTodo(newTodoValue)\r\n    setOpenModal(false);\r\n}\r\n\r\nreturn (\r\n        <form className=\"Form-NewTodo\"\r\n        onSubmit={onSubmit}> \r\n<label htmlFor=\"\">New To-do</label>\r\n<textarea className=\"text-gray-800\"\r\nvalue= {newTodoValue}\r\nonChange={onChange}\r\nplaceholder=\"Write a new task\"\r\n/>\r\n<div className=\"TodoForm-buttonContainer\">\r\n    <button className=\"bg-red-500  hover:bg-red-900 text-white font-semibold hover:text-white py-2 px-4 border hover:border-transparent rounded\"\r\n    type=\"button\"\r\n    onClick={onCancel}\r\n    >\r\n    Cancel \r\n    </button>\r\n\r\n    <button className=\"bg-green-500  hover:bg-green-900 text-white font-semibold hover:text-white py-2 px-4 border hover:border-transparent rounded\"\r\n    type=\"submit\"\r\n    >\r\n    Add\r\n    </button>\r\n</div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport { TodoForm }; //lo enviamos en AppUI.js en laparte del modal","import React from 'react';\r\n\r\nfunction TodosError({ error }) {\r\n    return <p> DesespÃ©rate, hubo un error... </p>;\r\n}\r\n\r\nexport { TodosError }","import React from 'react';\r\nimport { css } from \"@emotion/react\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\n//import './TodosLoading.css';\r\n\r\nfunction TodosLoading() {\r\n    const override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n    return (\r\n    <div className=\"sweet-loading\">\r\n        <DotLoader css={override} size={100} color={\"#61DAFA\"} loading={true} speedMultiplier={1.5} />\r\n      </div>)\r\n}\r\nexport {TodosLoading};","import React from 'react';\r\nimport \"animate.css\";\r\n\r\n\r\nfunction EmptyTodos() {\r\n    return <p className=\"text-center m-5 text-4xl font-semibold filter drop-shadow-lg text-purple-600 animate__animated animate__bounceIn\"> Create your first task!</p>\r\n        \r\n}\r\n\r\nexport { EmptyTodos };","import React from 'react';\r\nimport './CreateTodoButton.css';\r\n\r\nfunction CreateTodoButton(props) {\r\n    const onClickButton = () => {\r\n        props.setOpenModal(prevState => !prevState)\r\n    }\r\n    return ( <button className = \"CreateTodoButton\"\r\n        onClick = {onClickButton}>\r\n        +\r\n        </button>\r\n    )\r\n}\r\n\r\nexport { CreateTodoButton }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal( <\r\n        div className = \"ModalBackground\" > { children } <\r\n        /div>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport { Modal };","import React from 'react'\r\nimport { TodoContext } from '../TodoContext/index.js';\r\nimport { TodoCounter } from '../TodoCounter/index.js';\r\nimport { TodoSearch } from \"../TodoSearch/index.js\";\r\nimport { TodoList } from \"../TodoList/index.js\";\r\nimport { TodoItem } from \"../TodoItem/index.js\";\r\nimport { TodoForm } from '../TodoForm/index.js';\r\nimport { TodosError } from '../TodosError/index.js';\r\nimport { TodosLoading } from '../TodosLoading/index.js';\r\nimport { EmptyTodos } from '../EmptyTodos/index.js';\r\nimport { CreateTodoButton } from \"../CreateTodoButton/index.js\";\r\nimport { Modal } from \"../Modal\"\r\n\r\n\r\nfunction AppUI() {\r\n    const \r\n        { \r\n            error, \r\n            loading,\r\n            searchedTodos, \r\n            completeTodo, \r\n            deleteTodo,\r\n            openModal,\r\n            setOpenModal\r\n    } = React.useContext(TodoContext)\r\n    return (    \r\n    <React.Fragment>\r\n        <TodoCounter />\r\n        <TodoSearch />\r\n    \r\n   \r\n                <TodoList> \r\n                {error && <TodosError error={error} />}   \r\n                {loading && <TodosLoading />}   \r\n            {(!loading && !searchedTodos.length) && <EmptyTodos /> }\r\n                {searchedTodos.map(todo =>\r\n            <TodoItem key={todo.text}\r\n                    text={todo.text}\r\n                    completed={todo.completed}\r\n                    onComplete={() => completeTodo(todo.text)}\r\n                    onDelete={() => deleteTodo(todo.text)}/>)} \r\n                </TodoList>\r\n           \r\n\r\n{!!openModal && (\r\n    <Modal>\r\n    <TodoForm />\r\n</Modal>\r\n)}\r\n    <CreateTodoButton \r\n    setOpenModal = {setOpenModal}\r\n    />\r\n    \r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport { AppUI }","//import logo from \"./logo.svg\";\n//import \"./App.css\";\nimport React from \"react\";\nimport { TodoProvider } from '../TodoContext';\nimport { AppUI } from \"./AppUI.js\";\n\nfunction App() {\n  return (\n   <TodoProvider>\n      <AppUI />\n   </TodoProvider>\n      );\n            }\n\n      export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App/index.js\";\n\n\nReactDOM.render( \n<App />, document.getElementById(\"root\")\n);"],"sourceRoot":""}